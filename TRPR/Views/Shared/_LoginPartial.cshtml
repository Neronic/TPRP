@using Microsoft.AspNetCore.Identity

@inject SignInManager<IdentityUser> SignInManager
@inject UserManager<IdentityUser> UserManager
@inject Microsoft.AspNetCore.Http.IHttpContextAccessor HttpContextAccessor

@if (SignInManager.IsSignedIn(User))
{
    <form asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })" method="post" id="logoutForm" class="navbar-right" style="margin-right:10px;">
        <ul class="nav navbar-nav navbar-right">

            @{var userName = (HttpContextAccessor.HttpContext.Request.Cookies["userName"] != null) ? HttpContextAccessor.HttpContext.Request.Cookies["userName"] : UserManager.GetUserName(User);
            }
            <li class="dropdown">
                <a href="#" data-toggle="dropdown" class="dropdown-toggle"><i class="far fa-user" style="padding:5px;"></i> @userName<b class="caret"></b></a>
                <ul class="dropdown-menu">
                    <li><a asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">Change Security Settings</a></li>
                    <li><a asp-area="" asp-controller="ResearcherProfile" asp-action="Details">Manage Profile</a></li>
                    <li class="divider"></li>
                    <li><button type="submit" class="btn btn-link navbar-btn navbar-link" style="color:#707070;">Logout</button></li>
                </ul>
            </li>
        </ul>
    </form>
}
else
{
    <ul class="nav navbar-nav navbar-right">
        <li><a asp-area="Identity" asp-page="/Account/Register">Register</a></li>
        <li><a asp-area="Identity" asp-page="/Account/Login">Login</a></li>
    </ul>
}